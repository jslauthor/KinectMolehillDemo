package {		[SWF(width="1168", height="630", frameRate="60", backgroundColor="#CCCCCC")]			import away3d.containers.View3D;	import away3d.events.LoaderEvent;	import away3d.events.ResourceEvent;	import away3d.loading.ResourceManager;	import away3d.materials.BitmapMaterial;	import away3d.entities.Mesh;	import away3d.containers.ObjectContainer3D;		import away3d.tools.Explode;	import away3d.tools.Weld;		import flash.display.Sprite;	import flash.events.Event;	import flash.text.TextField;
	 	public class WeldExplode extends Sprite	{		private var _view : View3D;		private var _container : ObjectContainer3D;				private var field:TextField;		 		public function WeldExplode()		{			_view = new View3D();			_view.camera.z = -900;			addChild(_view);			 			ResourceManager.instance.addEventListener(ResourceEvent.RESOURCE_RETRIEVED, onResourceRetrieved);			ResourceManager.instance.addEventListener(LoaderEvent.LOAD_ERROR, onResourceLoadingError);						var url:String = "assets/models/2faces.ac";			ResourceManager.instance.getResource(url);			 		}		 		private function onResourceRetrieved(e:ResourceEvent) : void		{			trace("onResourceRetrieved event fired");						_container = ObjectContainer3D(e.resource);						Weld.apply(_container);			trace("VerticesRemoved:--> "+Weld.verticesRemoved);						Explode.apply(_container);			trace("VerticesAdded:--> "+Explode.verticesAdded);						_view.scene.addChild(_container);			this.addEventListener(Event.ENTER_FRAME, handleEnterFrame);		}				private function onResourceLoadingError(e:LoaderEvent) : void		{			trace("error while loading resource");		}		private function handleEnterFrame(e:Event) : void		{			_container.rotationY += 1;			_view.render();		}	}}