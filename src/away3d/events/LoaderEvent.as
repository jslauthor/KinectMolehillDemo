package away3d.events{	import away3d.loading.IResource;	import flash.events.Event;	/**	 * LoaderEvent is an Event dispatched to notify changes in loading state.	 */	public class LoaderEvent extends Event	{		/**		 * Dispatched when loading of an asset completed.		 */		public static const LOAD_COMPLETE : String = "loadComplete";				/**		 * Dispatched when loading of a asset failed.		 */		public static const LOAD_ERROR : String = "loadError";				/**		 * Dispatched when loading of a bitmap (png. jpg) failed.		 */		public static const LOAD_MAP_ERROR : String = "loadMapError";		/**		 * Dispatched when parsing of an asset completed.		 */		public static const PARSE_COMPLETE : String = "parseComplete";        private var _resource : IResource;        private var _url : String;		private var _message : String;		/**		 * Create a new LoaderEvent object.		 * @param type The event type.		 * @param resource The loaded or parsed resource.		 * @param url The url of the loaded resource.		 */		public function LoaderEvent(type:String, resource : IResource, url : String = null, errmsg : String = null)		{			super(type);            _resource = resource;            _url = url;			_message = errmsg;		}		/**		 * The loaded or parsed resource.		 */        public function get resource() : IResource        {            return _resource;        }		/**		 * The url of the loaded resource.		 */        public function get url() : String        {            return _url;        }				/**		 * The error string on loadError.		 */        public function get message() : String        {            return _message;        }						/**		 * Clones the current event.		 * @return An exact duplicate of the current event.		 */        public override function clone() : Event		{			return new LoaderEvent(type, _resource, _url);		}	}}